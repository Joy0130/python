name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Set repository name to lowercase
        run: echo "REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # 您可以根據需要選擇不同的 Python 版本
      # 安裝依賴項
      - name: Install dependencies
        run: |
          pip install -r requirements.txt  

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  # 使用觸發工作流的用戶名
          password: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 提供的 token

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .  # 指定构建上下文为当前目录
      #     file: ./Dockerfile  # 指定 Dockerfile 的路径
      #     push: true  # 设置为 true 以推送镜像
      #     tags: nas-tvm.futsu.com.tw:9999/python-test:latest  # 指定镜像标签

      # - name: Run container from Docker image
      #   run: |
      #     docker run -d -p 5002:5002 --name python-test-container nas-tvm.futsu.com.tw:9999/python-test:latest
      #     docker ps -a
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .  # 指定構建上下文為當前目錄
          file: ./Dockerfile  # 指定 Dockerfile 的路徑
          push: true  # 設置為 true 以推送鏡像
          tags: ghcr.io/${{ env.REPO_NAME }}/python:latest # 使用 GitHub 倉庫作為標籤，例如 ghcr.io/<owner>/<repo>:latest

      # - name: Run container from Docker image
      #   run: |
      #     sudo docker run -d -p 5000:5002 --name python-test-container ghcr.io/joy0130/python:latest
      #     sleep 15  
      #     sudo docker ps -a

      #   # 顯示容器日誌以檢查錯誤
      # - name: Show container logs
      #   run: docker logs python-test-container

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: python # 指定要分析的語言，可以根據需要添加其他語言

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
